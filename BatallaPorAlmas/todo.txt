Unificar funcion de generar amigos con generar personas
Hacer struct de pecados
Solucionar IMprimir ultimo nivel del arbol
Hacer struct de Arbol ABB

Tareas de ayer:

[X]Hacer que los humanos puedan publicar en redes sociales.
[X]HAcer los structs del RedSocial y pecados
[X]Generar el "Arbol de la vida"
[X]Hacer programar para mandar correos.


Tareas de hoy:
[X]Generar representacion de los Demonios con su arreglo y heaps; hacer que el heap funcione diferente, hacer que empiece de mayor a menor, y con eso hacer la vara de condenacion
[X]Algoritmo de condenacion, revisarlo para cambiarle el estado de vivo a muerto, y que no se repitan.
[]Bitacora de condenacion.
[] EL infierno
[>]Prototipo del menu, con un bucle, para ir realizando pruebas.

Tareas de ma침ana:
[]Arbol triario de angeles
[]Log de salvacion
[]Generar funcion HASH
[]Consultas
Log de condenacion.

void insertar(Persona* persona) {
    if (tamano == capacidad) {
        cout << "El heap est치 lleno." << endl;
        return;
    }

    int indice = tamano;
    personas[tamano++] = persona;

    // Realizar una clasificaci칩n directa (sorting) en el vector
    while (indice > 0) {
        int padre = (indice - 1) / 2;
        if (personas[indice]->pecados[pecadoCapital] > personas[padre]->pecados[pecadoCapital]) {
            // Intercambiar con el padre si el pecado es mayor
            swap(personas[indice], personas[padre]);
            indice = padre;
        } else {
            break;
        }
    }

    // Realizar una clasificaci칩n directa en el vector
    for (int i = 0; i < tamano; i++) {
        for (int j = i + 1; j < tamano; j++) {
            if (personas[i]->pecados[pecadoCapital] < personas[j]->pecados[pecadoCapital]) {
                swap(personas[i], personas[j]);
            }
        }
    }
}